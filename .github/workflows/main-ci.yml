name: Full CI Build

on:
  push:
    branches: [main]

jobs:
  # -----------------------------
  build:
    name: üöÄ Build App
    runs-on: windows-latest

    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
            fetch-depth: 0 # L·∫•y to√†n b·ªô history cho git blame

      - name: Restore dependencies
        run: dotnet restore ./Server/Server.csproj

      - name: Build Console v√†o th∆∞ m·ª•c BuildOutput
        run: dotnet publish ./Server/Server.csproj -c Release -o ./BuildOutput --self-contained false -r win-x64

      - name: Copy FE v√†o BuildOutput
        shell: pwsh
        run: |
          $feSource = "${{ github.workspace }}/fe"
          $beDestination = "${{ github.workspace }}/BuildOutput/fe"
          if (Test-Path $feSource) {
              if (Test-Path $beDestination) { Remove-Item $beDestination -Recurse -Force }
              Copy-Item $feSource $beDestination -Recurse
              Write-Host "‚úÖ ƒê√£ copy FE v√†o BuildOutput c·ªßa BE."
          } else {
              Write-Host "‚ÑπÔ∏è Th∆∞ m·ª•c FE kh√¥ng t·ªìn t·∫°i, b·ªè qua."
          }

      - name: Copy DB v√†o BuildOutput
        shell: pwsh
        run: |
          $dbSource = "${{ github.workspace }}/db"
          $beDestination = "${{ github.workspace }}/BuildOutput/db"
          if (Test-Path $dbSource) {
              if (Test-Path $beDestination) { Remove-Item $beDestination -Recurse -Force }
              Copy-Item $dbSource $beDestination -Recurse
              Write-Host "‚úÖ ƒê√£ copy DB v√†o BuildOutput c·ªßa BE."
          } else {
              Write-Host "‚ÑπÔ∏è Th∆∞ m·ª•c DB kh√¥ng t·ªìn t·∫°i, b·ªè qua."
          }

      - name: Upload th∆∞ m·ª•c BuildOutput (GitHub t·ª± zip khi t·∫£i v·ªÅ)
        uses: actions/upload-artifact@v4
        with:
          name: My App
          path: BuildOutput
          if-no-files-found: error
          retention-days: 7

      # -----------------------------
      # üîî Th√¥ng b√°o build k·∫øt qu·∫£
      - name: G·ª≠i th√¥ng b√°o build th√†nh c√¥ng
        if: success()
        run: |
          payload=$(jq -Rn --arg msg "‚úÖ Build main th√†nh c√¥ng l√∫c $(date '+%Y-%m-%d %H:%M:%S')" '{content: $msg}')
          curl -H "Content-Type: application/json" -X POST -d "$payload" "$DISCORD_WEBHOOK"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: G·ª≠i th√¥ng b√°o build th·∫•t b·∫°i
        if: failure()
        run: |
          payload=$(jq -Rn --arg msg "‚ùå Build main th·∫•t b·∫°i l√∫c $(date '+%Y-%m-%d %H:%M:%S')" '{content: $msg}')
          curl -H "Content-Type: application/json" -X POST -d "$payload" "$DISCORD_WEBHOOK"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
